{
	"name": "MoveAndLogModifiedFiles",
	"properties": {
		"activities": [
			{
				"name": "GetFilesDetail",
				"description": "获取每个改动过的文件或者文件夹，当前文件下",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "BinaryDataSource_Folder",
						"type": "DatasetReference",
						"parameters": {
							"Container": {
								"value": "@pipeline().parameters.source_location",
								"type": "Expression"
							},
							"Directory": {
								"value": "@pipeline().parameters.source_dir",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"modifiedDatetimeStart": {
							"value": "@addSeconds(pipeline().parameters.lastModified_time,1)",
							"type": "Expression"
						},
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "FilterFiles",
				"description": "过滤出文件",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "GetFilesDetail",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetFilesDetail').output.childItems",
						"type": "Expression"
					},
					"condition": {
						"value": "@and(equals(item().type,'File'),and(endswith(item().name, pipeline().parameters.suffix),startswith(item().name, pipeline().parameters.prefix)))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach File",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "FilterFiles",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('FilterFiles').output.value",
						"type": "Expression"
					},
					"batchCount": 10,
					"activities": [
						{
							"name": "Log",
							"description": "记录提取文件",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "GetFileMetadata",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzurePostgreSqlSource",
									"query": {
										"value": "insert into  dbo.\"ADM_FILE_EXTRACTRECORD\" values ('@{pipeline().parameters.source_name}','@{activity('GetFileMetadata').output.itemName}','@{utcNow()}','@{substring(activity('GetFileMetadata').output.itemName,length(pipeline().parameters.prefix),if(equals(pipeline().parameters.frequency,'daily'),8,6))}','@{activity('GetFileMetadata').output.lastModified}',0,0,0,0,'');\n\nupdate dbo.\"ADM_DATASOURCE_CONFIGURATION\" set lastModified_time='@{activity('GetFileMetadata').output.lastModified}' where source_name='@{pipeline().parameters.source_name}' and lastModified_time<'@{activity('GetFileMetadata').output.lastModified}';\nselect 1 ;",
										"type": "Expression"
									},
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "AzurePostgreSql_Adm",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "GetFileMetadata",
							"type": "GetMetadata",
							"dependsOn": [
								{
									"activity": "Copy File",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "Source_BinaryDataStore_DigitalHub",
									"type": "DatasetReference",
									"parameters": {
										"Container": {
											"value": "@pipeline().parameters.source_location",
											"type": "Expression"
										},
										"Directory": {
											"value": "@pipeline().parameters.source_dir",
											"type": "Expression"
										},
										"File": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"lastModified",
									"itemName"
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							}
						},
						{
							"name": "Copy File",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "Source_BinaryDataStore_DigitalHub",
									"type": "DatasetReference",
									"parameters": {
										"Container": {
											"value": "@pipeline().parameters.source_location",
											"type": "Expression"
										},
										"Directory": {
											"value": "@pipeline().parameters.source_dir",
											"type": "Expression"
										},
										"File": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "BinaryDataStore_DDPDataLake",
									"type": "DatasetReference",
									"parameters": {
										"Container": {
											"value": "@pipeline().parameters.destination_location",
											"type": "Expression"
										},
										"Directory": {
											"value": "@concat(concat(pipeline().parameters.destination_dir,'/'),substring(item().name,length(pipeline().parameters.prefix),6))",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"source_location": {
				"type": "string"
			},
			"source_dir": {
				"type": "string"
			},
			"suffix": {
				"type": "string"
			},
			"prefix": {
				"type": "string"
			},
			"frequency": {
				"type": "string"
			},
			"destination_location": {
				"type": "string"
			},
			"destination_dir": {
				"type": "string"
			},
			"topic": {
				"type": "string"
			},
			"lastModified_time": {
				"type": "string"
			},
			"source_name": {
				"type": "string"
			}
		},
		"folder": {
			"name": "00_Framework"
		},
		"annotations": [],
		"lastPublishTime": "2024-03-19T04:13:25Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}